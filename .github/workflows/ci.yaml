# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
#
# See https://github.com/r-lib/actions/tree/master/examples#readme for
# additional example workflows available for the R community.

name: BuildAndTest

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
  workflow_dispatch:

env:
  USER: ${{ secrets.USER }}
  PASSWORD: ${{ secrets.PASSWORD }}
  PASSWORD_AIRLINE_USER: ${{ secrets.PASSWORD_AIRLINE_USER }}
  PASSWORD_AIRLINE_USER_DBOWNER: ${{ secrets.PASSWORD_AIRLINE_USER_DBOWNER }}
  DRIVER: "{ODBC Driver 17 for SQL Server}"

jobs:
  R:
    runs-on: windows-2022
    strategy:
      matrix:
        include:
          - r-version: "3.5.2"
            sql-platform: "box"
          #- r-version: "4.2.0"
          #  sql-platform: "box"

    env:
      # Define CI to skip some test case.
      CI: True
      DATABASE: ${{ secrets.DATABASE }}

    defaults:
      run:
        shell: cmd

    steps:
      #- name: Download CAB files
      #  run: wget -Uri "https://go.microsoft.com/fwlink/?linkid=2134897" -OutFile "C:\Temp"
      #  shell: cmd
       
      #- name: Download CAB files
      #  run: curl https://go.microsoft.com/fwlink/?linkid=2134897 -o "C:\Temp\SRO_3.5.2.777_1033.cab"
      #  shell: cmd

      # /MRCACHEDIRECTORY=`"C:\Temp`"
      - name: Install SQL Server 2019
        run: choco install sql-server-2019 -y -params "'/ACTION=Install /FEATURES=SQLEngine,ADVANCEDANALYTICS /INSTANCENAME=MSSQLSERVER /SQLSYSADMINACCOUNTS=Administrator /IACCEPTSQLSERVERLICENSETERMS'"
        shell: cmd
      
      - name: Apply SQL Server 2019 Cumulative Update
        run: choco install sql-server-2019-cumulative-update -y
        shell: cmd

      - name: Install sqlcmd
        run: choco install sqlcmd
        shell: cmd

      - name: Check Connectivity to SQL Database
        run: |
          sqlcmd -S localhost\MSSQLSERVER -U SA -P yukon900 -d Master -l 5 -Q "SELECT @@VERSION"
        shell: cmd

      - name: Enable External Scripts
        run: sqlcmd -S localhost\MSSQLSERVER -Q `"EXEC sp_configure  'external scripts enabled', 1
          RECONFIGURE WITH OVERRIDE`"
